{"version":3,"sources":["components/Loader.js","components/Film.js","components/Navbar.js","components/Films.js","App.js","reportWebVitals.js","index.js"],"names":["Loader","className","role","Film","film","useState","isOpen","setIsOpen","isLoading","setIsLoading","planets","setPlanets","starships","setStarships","isOpenHandler","a","Promise","all","map","planet","axios","get","slice","resFilm","starship","resStarship","oldArray","data","name","title","type","onClick","disabled","release_date","director","producer","join","opening_crawl","Navbar","setSearchTerm","sorted","searchTerm","setSorted","handleSort","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","onSubmit","event","preventDefault","placeholder","onChange","target","value","Films","setData","sortedData","useEffect","then","res","results","items","renderFilms","sort","b","filter","item","toLowerCase","includes","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","queryClient","QueryClient","ReactDOM","render","StrictMode","QueryClientProvider","client","document","getElementById"],"mappings":"oSAWeA,EATA,WACX,OACI,qBAAKC,UAAU,iCAAf,SACI,qBAAKA,UAAU,mCAAmCC,KAAK,SAAvD,SACI,sBAAMD,UAAU,kBAAhB,6BC6DDE,G,MA9DF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EACKC,oBAAS,GADd,mBAChBC,EADgB,KACRC,EADQ,OAEUF,oBAAS,GAFnB,mBAEhBG,EAFgB,KAENC,EAFM,OAGOJ,mBAAS,IAHhB,mBAGhBK,EAHgB,KAGPC,EAHO,OAIWN,mBAAS,IAJpB,mBAIhBO,EAJgB,KAILC,EAJK,KAMjBC,EAAa,uCAAG,8BAAAC,EAAA,6DAClBN,GAAa,GADK,SAEIO,QAAQC,IAAIb,EAAKM,QAAQQ,KAAI,SAAAC,GAC/C,OAAOC,IAAMC,IAAIF,EAAOG,MAAM,SAHhB,cAEZC,EAFY,gBAKQP,QAAQC,IAAIb,EAAKQ,UAAUM,KAAI,SAAAM,GACrD,OAAOJ,IAAMC,IAAIG,EAASF,MAAM,SANlB,OAKZG,EALY,OAQlBd,GAAW,SAAAe,GAAQ,4BAAQA,GAAR,YAAqBH,EAAQL,KAAI,SAAAS,GAAI,OAAIA,EAAKA,KAAKC,aACtEf,GAAa,SAAAa,GAAQ,4BAAQA,GAAR,YAAqBD,EAAYP,KAAI,SAAAS,GAAI,OAAIA,EAAKA,KAAKC,aAC5EnB,GAAa,GACbF,GAAU,GAXQ,4CAAH,qDAmBnB,OACI,qBAAKN,UAAU,iBAAf,SACI,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,QAAf,SACI,kCAAI,8BAAMG,EAAKyB,QAAf,SAEJ,wBACIC,KAAK,SACL7B,UAAU,2BACV8B,QAASjB,EACTkB,SAAU1B,EAJd,SAMKE,EAAY,cAAC,EAAD,IAAY,iBAE5BF,GACG,gCACI,qBAAIL,UAAU,gBAAd,UACI,qBAAIA,UAAU,gBAAd,UAA8B,2CAAkBG,EAAK6B,gBACrD,qBAAIhC,UAAU,gBAAd,UAA8B,6CAA9B,IAAmDG,EAAK8B,YACxD,qBAAIjC,UAAU,gBAAd,UAA8B,6CAA9B,KAAoDG,EAAK+B,YACzD,qBAAIlC,UAAU,gBAAd,UAA8B,0CAA9B,KAAiDS,EAAQ0B,KAAK,SAC9D,qBAAInC,UAAU,gBAAd,UAA8B,4CAA9B,KAAmDW,EAAUwB,KAAK,SAClE,oBAAInC,UAAU,gBAAd,SAA8B,4BAAIG,EAAKiC,qBAE3C,wBACIP,KAAK,SACL7B,UAAU,mBACV8B,QAjCD,WACnBxB,GAAU,GACVI,EAAW,IACXE,EAAa,iBCoCNyB,EA7DA,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,cAA2BC,GAAwB,EAApCC,WAAoC,EAAxBD,QAAQE,EAAgB,EAAhBA,UAE3CC,EAAa,WACfD,GAAWF,IAQf,OACI,qBAAKvC,UAAY,aAAjB,SACI,sBAAKA,UAAU,gDAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,mBAAGA,UAAU,eAAb,sBAGA,wBACIA,UAAU,iBACV6B,KAAK,SACLc,iBAAe,WACfC,iBAAe,0BACfC,gBAAc,yBACdC,gBAAc,QACdC,aAAW,oBAPf,SASI,sBAAM/C,UAAU,0BAGhBuC,EACM,wBACEV,KAAK,SACL7B,UAAU,8BACV8B,QAASY,EAHX,oBAOA,wBACEb,KAAK,SACL7B,UAAU,8BACV8B,QAASY,EAHX,iCAUd,sBAAM1C,UAAU,SAASgD,SAxCf,SAACC,GACnBA,EAAMC,kBAuCE,SACI,uBACIlD,UAAU,oBACVmD,YAAY,SACZJ,aAAW,SACXK,SAhDE,SAACH,GACnBX,EAAcW,EAAMI,OAAOC,kBCoDpBC,EAvDD,WAAO,IAAD,EACQnD,mBAAS,IADjB,mBACTsB,EADS,KACH8B,EADG,OAEoBpD,mBAAS,IAF7B,mBAEToC,EAFS,KAEGF,EAFH,OAGYlC,oBAAS,GAHrB,mBAGTmC,EAHS,KAGDE,EAHC,KAIVgB,EAAU,YAAO/B,GAEvBgC,qBAAU,WACNvC,IAAMC,IAAI,UAAUuC,MAAK,SAAAC,GACrBJ,EAAQI,EAAIlC,KAAKmC,cAEtB,IAIH,IAQoBC,EAYdC,EAAc,SAAC5D,GACjB,OACI,cAAC,EAAD,CAAMA,KAAMA,KAIpB,OACI,gCACI,cAAC,EAAD,CAAQmC,cAAeA,EAAeE,WAAYA,EAAYD,OAAQA,EAAQE,UAAWA,IACvFF,EA3BFkB,EAAWO,MAAK,SAAClD,EAAGmD,GAChB,OAAInD,EAAEc,MAAQqC,EAAErC,MAAc,EAC1Bd,EAAEc,MAAQqC,EAAErC,OAAe,EACxB,KAyBQsC,QAAO,SAAAC,GAClB,MAAmB,KAAf3B,GAEO2B,EAAKvC,MAAMwC,cAAcC,SAAS7B,EAAW4B,eAD7CD,OACJ,KAGRlD,IAAI8C,IA5BCD,EAqBUpC,EAnBtBoC,EAAMI,QAAO,SAAAC,GACT,MAAmB,KAAf3B,GAEO2B,EAAKvC,MAAMwC,cAAcC,SAAS7B,EAAW4B,eAD7CD,OACJ,MAgBiBlD,IAAI8C,OCrC7BO,MARf,WACE,OACE,qBAAKtE,UAAU,MAAf,SACE,cAAC,EAAD,OCMSuE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,gBCARO,EAAc,IAAIC,IAExBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,EAAD,CAAqBC,OAAUN,EAA/B,SACE,cAAC,EAAD,QAGJO,SAASC,eAAe,SAM1BhB,M","file":"static/js/main.6b326900.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"d-flex justify-content-center \">\r\n            <div className=\"spinner-border spinner-border-sm\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Loader;","import axios from 'axios'\r\nimport React, { useState } from 'react'\r\nimport Loader from './Loader'\r\nimport '../styles/film.css'\r\n\r\nconst Film = ({ film }) => {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const [isLoading,setIsLoading] = useState(false)\r\n    const [planets, setPlanets] = useState([])\r\n    const [starships, setStarships] = useState([])\r\n\r\n    const isOpenHandler = async () => {\r\n        setIsLoading(true)\r\n        const resFilm = await Promise.all(film.planets.map(planet => {\r\n            return axios.get(planet.slice(20))\r\n        }))\r\n        const resStarship = await Promise.all(film.starships.map(starship => {\r\n            return axios.get(starship.slice(20))\r\n        }))\r\n        setPlanets(oldArray => [...oldArray, ...resFilm.map(data => data.data.name)])\r\n        setStarships(oldArray => [...oldArray, ...resStarship.map(data => data.data.name)])\r\n        setIsLoading(false)\r\n        setIsOpen(true)\r\n    }\r\n    const isCloseHandler = () => {\r\n        setIsOpen(false)\r\n        setPlanets([])\r\n        setStarships([])\r\n    }\r\n    \r\n    return (\r\n        <div className='card film_card'>\r\n            <div className='card-body '>\r\n                <div className='title'>\r\n                    <b> <big>{film.title}</big> </b>\r\n                </div>\r\n                <button\r\n                    type='button'\r\n                    className='btn btn-secondary btn-sm'\r\n                    onClick={isOpenHandler}\r\n                    disabled={isOpen}\r\n                >\r\n                    {isLoading ? <Loader/> : 'Show Details'}\r\n                </button>\r\n                {isOpen &&\r\n                    <div>\r\n                        <ol className='detailed_body'>\r\n                            <li className='detailed_item'><b>Premier : </b>{film.release_date}</li>\r\n                            <li className='detailed_item'><b> Director : </b> {film.director}</li>\r\n                            <li className='detailed_item'><b>Producers : </b>  {film.producer}</li>\r\n                            <li className='detailed_item'><b>Planets :</b>  {planets.join(', ')}</li>\r\n                            <li className='detailed_item'><b>Starships :</b>  {starships.join(', ')}</li>\r\n                            <li className='detailed_item'><i>{film.opening_crawl}</i></li>\r\n                        </ol>\r\n                        <button\r\n                            type='button'\r\n                            className='btn-close btn-sm'\r\n                            onClick={isCloseHandler}\r\n                        >\r\n                        </button>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Film;","import React from 'react'\r\n\r\nconst Navbar = ({ setSearchTerm, searchTerm, sorted, setSorted }) => {\r\n\r\n    const handleSort = () => {\r\n        setSorted(!sorted)\r\n    }\r\n    const changeHandler = (event) => {\r\n        setSearchTerm(event.target.value)\r\n    }\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n    }\r\n    return (\r\n        <div className = 'sticky-top'>\r\n            <nav className='navbar navbar-expand-lg navbar-light bg-light'>\r\n                <div className='container-fluid'>\r\n                    <a className=\"navbar-brand\">\r\n                        SW Films\r\n                    </a>\r\n                    <button\r\n                        className=\"navbar-toggler\"\r\n                        type=\"button\"\r\n                        data-bs-toggle=\"collapse\"\r\n                        data-bs-target=\"#navbarSupportedContent\"\r\n                        aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\"\r\n                        aria-label=\"Toggle navigation\"\r\n                    >\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    {\r\n                        sorted\r\n                            ? <button\r\n                                type=\"button\"\r\n                                className=\"btn btn btn-outline-success\"\r\n                                onClick={handleSort}\r\n                            >\r\n                                Unsort\r\n                                 </button>\r\n                            : <button\r\n                                type=\"button\"\r\n                                className=\"btn btn btn-outline-success\"\r\n                                onClick={handleSort}\r\n                            >\r\n                                Sort by alphabet\r\n                                </button>\r\n                    }\r\n\r\n                </div>\r\n                <form className=\"d-flex\" onSubmit = {submitHandler}>\r\n                    <input\r\n                        className=\"form-control me-2\"\r\n                        placeholder=\"Search\"\r\n                        aria-label=\"Search\"\r\n                        onChange={changeHandler}\r\n                    />\r\n                </form>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Film from './Film'\r\nimport Navbar from './Navbar'\r\n\r\nconst Films = () => {\r\n    const [data, setData] = useState([])\r\n    const [searchTerm, setSearchTerm] = useState('')\r\n    const [sorted, setSorted] = useState(false)\r\n    const sortedData = [...data]\r\n\r\n    useEffect(() => {\r\n        axios.get('/films').then(res => {\r\n            setData(res.data.results)\r\n        })\r\n    }, [])\r\n\r\n\r\n\r\n    const sortirovka = () => {\r\n        return (\r\n            sortedData.sort((a, b) => {\r\n                if (a.title > b.title) return 1\r\n                if (a.title < b.title) return -1\r\n                return 0;\r\n            }))\r\n    }\r\n    const filtration = (items) => {\r\n        return (\r\n            items.filter(item => {\r\n                if (searchTerm === '') {\r\n                    return item\r\n                } else if (item.title.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                    return item\r\n                }\r\n            })\r\n        )\r\n    }\r\n\r\n    const renderFilms = (film) => {\r\n        return (\r\n            <Film film={film} />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar setSearchTerm={setSearchTerm} searchTerm={searchTerm} sorted={sorted} setSorted={setSorted} />\r\n            {!sorted ? filtration(data).map(renderFilms)\r\n                : sortirovka().filter(item => {\r\n                    if (searchTerm === '') {\r\n                        return item\r\n                    } else if (item.title.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                        return item\r\n                    }\r\n                }).map(renderFilms)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Films;","import './App.css';\nimport Films from './components/Films';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Films />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { QueryClient, QueryClientProvider } from 'react-query';\n\nconst queryClient = new QueryClient()\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client = {queryClient}>\n      <App />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}